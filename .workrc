#!/usr/bin/env bash

nu-refresh() {
    echo -e "================ Updating NU CLI ================"
    nu update

    echo -e "================ AWS Credentials ================"
    echo -e "================ Refreshing AWS Credentials ================"
    nu aws credentials reset
    nu aws credentials setup
    nu aws credentials refresh
    nu aws shared-role-credentials refresh --interactive
    nu aws shared-role-credentials refresh --account-alias=br --keep-policies admin/cs,admin,eng,prod-eng,databricks-mx-general,databricks-general,casual-dev,lending-engineering,shared-systems-resources
    nu aws credentials refresh --aws-account='mx'
    nu aws credentials refresh --aws-account='br'
    nu aws shared-role-credentials refresh --account-alias br-staging --keep-policies admin/cs,admin,eng,prod-eng,databricks-mx-general,databricks-general,casual-dev,lending-engineering,shared-systems-resources
    nu aws shared-role-credentials available --account-alias=br

    echo -e "================ Loading Dependencies ================"
    nu codeartifact login maven
    nu codeartifact login npm

    echo -e "================ Setting up certificates and tokens ================"

    # CO Environment
    echo -e "================ Setting up CO environment ================"
    nu-co certs setup --env prod
    nu-co certs setup --env staging
    nu-co auth jwt --env prod
    nu-co auth jwt --env staging
    nu-co auth get-refresh-token --env prod --force
    nu-co auth get-refresh-token --env staging --force
    nu-co auth get-access-token --env prod
    nu-co auth get-access-token --env staging

    # IST Environment
    echo -e "================ Setting up IST environment ================"
    nu-ist certs setup --env prod
    nu-ist certs setup --env staging
    nu-ist auth get-refresh-token --env prod --force
    nu-ist auth get-access-token --env prod
    nu-ist auth get-refresh-token --env staging --force
    nu-ist auth get-access-token --env staging

    # BR Staging Environment
    echo -e "================ Setting up BR Staging environment ================"
    nu-br-staging certs setup
    nu-br-staging auth get-refresh-token
    nu-br-staging auth get-access-token
    nu-br-staging aws shared-role-credentials refresh --account-alias=br --keep-policies casual-dev,eng,prod-eng

    # BR Production Environment
    echo -e "================ Setting up BR Production environment ================"
    nu-br certs setup --env prod
    nu-br auth get-refresh-token --env prod --force
    nu-br auth get-access-token --env prod
    nu-br aws shared-role-credentials refresh --account-alias=br --keep-policies casual-dev,eng,prod-eng

    # MX Environment
    echo -e "================ Setting up MX environment ================"
    nu-mx certs setup --env prod
    nu-mx certs setup --env staging
    nu-mx auth get-refresh-token --env prod --force
    nu-mx auth get-refresh-token --env staging --force
    nu-mx auth get-access-token --env prod
    nu-mx auth get-access-token --env staging

    # Data Environment
    echo -e "================ Setting up Data environment ================"
    nu-data certs setup --env staging
    nu-data certs setup --env prod
    nu-data auth get-refresh-token --env prod --force
    nu-data auth get-refresh-token --env staging --force
    nu-data auth get-access-token --env prod
    nu-data auth get-access-token --env staging

    # cp -r $HOME/dev/nu/.nu/tokens/br-staging/staging $HOME/dev/nu/.nu/tokens/br/
    # cp -r $HOME/dev/nu/.nu/tokens/br-staging/staging $HOME/dev/nu/.nu/tokens/br-staging/
}

nu-mmr() {
    xcrun simctl create 'iPhone 16 18-2' \
        com.apple.CoreSimulator.SimDeviceType.iPhone-16 \
        com.apple.CoreSimulator.SimRuntime.iOS-18-2
    xcrun simctl boot 'iPhone 16 18-2'
    cd ~/dev/nu/mini-meta-repo
    monocli doctor
    monocli l10n get
    monocli deps get -p flutter-desktop
    nu-co customer get-keys-and-certificates --env staging
    flutter run -d macos -t lib/main_desktop.dart
}

#!/usr/bin/env bash

# Function to ping the workspace
ping() {
    cd "$1" || return
    ansible -i ../hosts.ini Workspace -c local -m ping
    return
}

# Function to ping the workspace
setup() {
    cd "$1" || return
    ansible-playbook -c local \
        -i ../hosts.ini \
        --become-password-file "$1/.become_password" \
        --vault-password-file "$1/.vault_password" \
        playbook.yml
    return
}

install-darwin-dependencies() {
    [ ! -e /opt/homebrew/bin/ansible ] && brew install ansible
}

install-linux-dependencies() {
    [ ! -e /usr/bin/ansible ] && dnf install ansible
}

set-ssh-key-to-github() {
    gh auth login --with-token
    gh auth refresh -h github.com -s admin:ssh_signing_key
    gh ssh-key add "$HOME/.ssh/${CURRENT_USER}_rsa.pub" --type signing
}

# Main script logic
main() {
    local OS
    local FLAG
    local WORKSPACE_PATH
    OS="$(uname -a)"

    if [[ $OS =~ Darwin ]]; then
        OS="darwin"
    fi

    if [[ $OS =~ Linux ]]; then
        OS="linux"
    fi

    FLAG="$1+$OS"
    WORKSPACE_PATH="$HOME/.dotfiles/workspace/$OS"

    case "$FLAG" in
    "ping+darwin")
        install-darwin-dependencies
        ping "$WORKSPACE_PATH"
        ;;
    "ping+linux")
        install-linux-dependencies
        ping "$WORKSPACE_PATH"
        ;;
    "setup+darwin")
        install-darwin-dependencies
        setup "$WORKSPACE_PATH"
        ;;
    "setup+linux")
        install-linux-dependencies
        setup "$WORKSPACE_PATH"
        ;;
    github*)
        set-ssh-key-to-github
        ;;
    *)
        echo "Usage: $0 {ping|setup}"
        exit 1
        ;;
    esac
}

main "$1"

#!/usr/bin/env bash

# Get the directory where this script is located
readonly SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# Source all modules
source "$SCRIPT_DIR/script/logging.sh"
source "$SCRIPT_DIR/script/utils.sh"
source "$SCRIPT_DIR/script/ansible.sh"
source "$SCRIPT_DIR/script/theme.sh"
source "$SCRIPT_DIR/script/git.sh"
source "$SCRIPT_DIR/script/dev.sh"

# Command dispatcher
dispatch_command() {
    local command="$1"
    local workspace_path="$2"

    case "$command" in
    "ping")
        execute_ping "$workspace_path"
        ;;
    "setup")
        execute_setup "$workspace_path"
        ;;
    "clean")
        execute_clean
        ;;
    "night")
        execute_night
        ;;
    "day")
        execute_day
        ;;
    "github")
        execute_github
        ;;
    "connect")
        execute_connect
        ;;
    "doom")
        execute_doom
        ;;
    "icon")
        execute_icon
        ;;
    "mark")
        execute_mark
        ;;
    *)
        log_error "Unknown command: $command"
        return 1
        ;;
    esac
}

# Main function
main() {
    local command="$1"
    local workspace_path

    # Check if command is provided
    if [[ -z "$command" ]]; then
        show_usage
        exit 1
    fi

    # Validate command
    validate_command "$command" || {
        show_usage
        exit 1
    }

    # Commands that don't need workspace path
    if [[ "$command" == "day" ||
        "$command" == "doom" ||
        "$command" == "icon" ||
        "$command" == "night" ||
        "$command" == "github" ||
        "$command" == "connect" ||
        "$command" == "mark" ||
        "$command" == "clean" ]]; then
        dispatch_command "$command"
        exit $?
    fi

    # Ensure dotfiles directory exists
    ensure_dotfiles_dir

    # Get and validate workspace path for ansible commands
    workspace_path=$(get_workspace_path) || exit 1
    validate_workspace "$workspace_path" || exit 1

    # Execute command
    log_info "Workspace path: $workspace_path"
    dispatch_command "$command" "$workspace_path"
}

# Execute main function with all arguments
main "$@"

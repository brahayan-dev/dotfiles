---
- name: Install Dependencies (Linux)
  become: true
  dnf:
    name:
      - git
      - zsh
      - zed
      - npm
      - gcc
      - curl
      - tree
      - make
      - rust
      - cargo
      - unzip
      - pdftk
      - rlwrap
      - neovim
      - golang
      - podman
      - direnv
      - lazygit
      - gcc-c++
      - opentofu
      - gmp-devel
      - zlib-devel
      - dbeaver-ce
      - glibc-devel
      - libffi-devel
      - openssl-devel
      - libyaml-devel
      - readline-devel
      - pkgconf-pkg-config
    state: present
  when: ansible_os_family == "RedHat"

- name: Install Dependencies (macOS)
  community.general.homebrew:
    name:
      - jq
      - gh
      - zed
      - zsh
      - git
      - npm
      - gmp
      - rust
      - lima
      - curl
      - tree
      - unzip
      - rlwrap
      - neovim
      - podman
      - golang
      - direnv
      - lazygit
      - libyaml
      - ghostty
      - opentofu
      - openssl@3
      - font-fira-code
      - dbeaver-community
    state: present
  when: ansible_os_family == "Darwin"

- name: Install Dependencies For Work (macOS)
  community.general.homebrew:
    name:
      - fd
      - gcc
      - make
      - grip
      - cmake
      - shfmt
      - pandoc
      - libtool
      - ripgrep
      - coursier
      - shellcheck
    state: present
  when:
    - not akeptous_file.stat.exists
    - ansible_os_family == "Darwin"

- name: Install Brave (Linux)
  shell: curl -fsS https://dl.brave.com/install.sh | sh
  args:
    creates: "/usr/bin/brave-browser"
  when: ansible_os_family == "RedHat"

- name: Install Common Dependencies (macOS)
  community.general.homebrew:
    name:
    state: present
  when: ansible_os_family == "Darwin"

- name: Install Common Cask Dependencies (macOS)
  community.general.homebrew_cask:
    name: arc
    state: present
  when: ansible_os_family == "Darwin"

- name: Set Zsh As Shell By Default
  become: true
  user:
    name: "{{ current_user }}"
    shell: /bin/zsh
    generate_ssh_key: true
    ssh_key_bits: 4096
    ssh_key_file: ".ssh/{{ current_user }}_rsa"

- name: Install Ohmyzsh
  block:
    - name: Install Ohmyzsh - Download Installer
      get_url:
        url: https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
        dest: /tmp/ohmyzsh.sh
        mode: 0777
    - name: Install Ohmyzsh - Run Installer
      shell: |
        echo "Y" | sh /tmp/ohmyzsh.sh
      args:
        creates: "/{{ base_dir }}/{{ current_user }}/.oh-my-zsh"

- name: Rename Zprofile File
  block:
    - name: Rename Zprofile File - Verify Operation
      stat:
        path: "/{{ base_dir }}/{{ current_user }}/.zshrc"
      register: zprofile_file
    - name: Rename Zprofile File - Execute Operation
      command: >
        mv
        "/{{ base_dir }}/{{ current_user }}/.zprofile"
        "/{{ base_dir }}/{{ current_user }}/.zprofile--"
      args:
        creates: "/{{ base_dir }}/{{ current_user }}/.zprofile--"
      when: zprofile_file.stat.exists

- name: Rename Zshrc File
  block:
    - name: Rename Zshrc File - Verify Operation
      stat:
        path: "/{{ base_dir }}/{{ current_user }}/.zshrc"
      register: zshrc_file
    - name: Rename Zshrc File - Execute Operation
      command: >
        mv
        "/{{ base_dir }}/{{ current_user }}/.zshrc"
        "/{{ base_dir }}/{{ current_user }}/.zshrc--"
      args:
        creates: "/{{ base_dir }}/{{ current_user }}/.zshrc--"
      when: zshrc_file.stat.exists

- name: Configure Ghostty
  file:
    path: "/{{ base_dir }}/{{ current_user }}/.config/ghostty"
    state: directory
    mode: 0755
